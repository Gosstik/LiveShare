error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 786;
}

http {
    access_log off; # To speed up handling
    # access_log /var/log/nginx/access.log; # debug

    # # Force IPv4 DNS resolution
    # resolver 8.8.8.8 ipv6=off;

    upstream frontend {
        server liveshare_frontend:3000;
    }

    upstream backend {
        server liveshare_backend:8000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # index index.html;

        location / {
            # root /static/html;

            # TODO: why to use Host and X-Real-IP ???
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;

            proxy_pass http://frontend;
            # proxy_pass http://liveshare_frontend:3000; # also possible

            ### Using variable creates dynamic resolution which
            ### means that we have to setup resolver correctly or
            ### we will get 502 error from nginx
            # resolver 127.0.0.11; # Docker DNS resolver
            # set $frontend_host "liveshare_frontend";
            # proxy_pass http://$frontend_host:3000;
        }

        # For making queries to backend without frontend
        location /api/ {
            ### Logs for debugging
            # access_log /var/log/nginx/backend-api-access.log;
            # error_log /var/log/nginx/backend-api-error.log debug;

            proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;

            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend;
            # proxy_pass http://liveshare_backend:8000; # also possible
        }

        location ~ ^(/admin/?|/static/admin/?) {
            # dnango admin panel

            proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;

            proxy_pass http://backend;
        }

        location ~ ^(/api/schema/swagger-ui/?|/api/schema/yaml/?) {
            # swagger schema

            proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;

            proxy_pass http://backend;
        }
    }

    server {
        ### default - to make a server the default for unmatched hostnames
        listen 80 default;
        listen [::]:80 default;
        server_name _; # all other server names

        # both default and _ alone are also often sufficient to catch unmatched requests
        # In complex setups with many server blocks, using both ensures the catch-all behavior works as expected
        return 444; # Reject unknown hosts
    }

    #################################################

    ### Server for proxying requests of containers inside nginx network
    ### usage: curl -v http://liveshare_nginx/google-oauth/token
    # server {
    #     listen 80;
    #     server_name liveshare_nginx;

    #     # Proxy backend to Google OAuth API
    #     location /google-oauth/ {
    #         # ...
    #     }
    # }
}
